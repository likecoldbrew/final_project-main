plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.moowork.node' version '1.3.1'
}

group = 'kr.or.nextit'
version = '0.0.1-SNAPSHOT'
apply plugin: 'war'
apply plugin: 'com.moowork.node'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}


repositories {
    mavenCentral()
    allprojects { // 결제 모듈 관련 저장소
        repositories {
            maven { url 'https://jitpack.io' }
        }
    }
}

bootWar.enabled = false
war.enabled = true

dependencies {
    // Spring Boot 기본 의존성
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'

    // MyBatis 관련 의존성
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'

    // Hibernate ORM & Hibernate Search
    implementation 'org.hibernate.orm:hibernate-core:6.2.1.Final'
    implementation 'org.hibernate.search:hibernate-search-mapper-orm-orm6:6.2.1.Final'
    implementation 'org.hibernate.search:hibernate-search-backend-lucene:6.2.1.Final'

    // JWT 관련 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // Lombok (컴파일 시 주입 및 애너테이션 프로세싱)
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 데이터베이스 및 모듈
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21' // 결제 모듈
    implementation 'org.springframework.boot:spring-boot-starter-websocket' // 웹소켓


    // JAXB (Java XML 처리용)
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.2'

    // 개발 도구 (Hot reload)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // 테스트 관련 의존성
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
    useJUnitPlatform()
}


def webappDir = "$projectDir/src/main/frontend"

sourceSets {
    main {
        resources {
            srcDirs = ["$webappDir/build", "$projectDir/src/main/resources"]
        }
    }
}

//processResources {
//    dependsOn "copyWebApp"
//}

//task installReact(type: Exec) {
//    workingDir "$webappDir"
//    inputs.dir "$webappDir"
//    group = BasePlugin.BUILD_GROUP
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//        commandLine "npm.cmd", "audit", "fix"
//        commandLine 'npm.cmd', 'install'
//    } else {
//        commandLine "npm", "audit", "fix"
//        commandLine 'npm', 'install'
//    }
//}
//
//
//task buildReact(type: Exec) {
//    dependsOn "installReact"
//    workingDir "$webappDir"
//    inputs.dir "$webappDir"
//    group = BasePlugin.BUILD_GROUP
//    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
//        commandLine "npm.cmd", "run-script", "build"
//    } else {
//        commandLine "npm", "run-script", "build"
//    }
//}
//
//
//task copyWebApp(type: Copy) {
//    dependsOn "buildReact"
//    from "$webappDir/build"
//    into "$projectDir/src/main/resources/static"
//}
